{"version":3,"sources":["../../src/components/icon.tsx","../../src/components/text.tsx","../../src/components/buttons/accept.tsx","../../src/components/buttons/read-more.tsx","../../src/components/buttons/index.tsx","../../src/helpers/debug.ts","../../src/intl/messages/index.ts","../../src/intl/format.ts","../../src/validator/index.ts","../../src/components/cookie-notice.tsx","../../src/helpers/cookies.ts","pages/Home/index.tsx"],"names":["Icon","className","styles","Text","cookieTextLabel","React","AcceptButton","acceptButtonLabel","handleAcceptButtonClick","onClick","ReadMoreButton","readMoreButtonLabel","readMoreButtonLink","readMoreButtonOpenInNewTab","href","target","rel","undefined","Buttons","err","message","process","en","fr","formatMessage","id","override","navigatorLanguage","navigator","usedLanguage","Object","availableLanguages","messages","console","validateAcceptButtonLabel","parameter","validateReadMoreButtonLabel","validateReadMoreButtonLink","validateReadMoreButtonOpenInNewTab","validateCookieTextLabel","cookieExpiration","cookieName","onAcceptButtonClick","validCookieExpiration","validateCookieExpiration","validCookieName","test","userCookiesAllowed","name","value","document","decodeURIComponent","getCookie","cookiesAllowed","setCookiesAllowed","useEffect","expires","days","setCookie","Contact","lazy","MiddleBlock","Container","ScrollToTop","ContentBlock","Home","type","title","IntroContent","content","text","button","icon","MiddleBlockContent","AboutContent","section","MissionContent","textinput","qr","ProductContent","ContactContent"],"mappings":"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","file":"static/js/0.3b1b95d1.chunk.js","sourcesContent":["import React from 'react'\n\nimport styles from '../styles.module.css'\n\nconst Icon: React.FC = () => (\n  <div className={styles['react-cookienotice-icon']} />\n)\n\nexport default Icon\n","import React from 'react'\n\nimport styles from '../styles.module.css'\n\ninterface TextProps {\n  cookieTextLabel: string\n}\n\nconst Text: React.FC<TextProps> = ({ cookieTextLabel }) => (\n  <div className={styles['react-cookienotice-text']}>\n    <span>{cookieTextLabel}</span>\n  </div>\n)\n\nexport default Text\n","import React from 'react'\n\nimport styles from '../../styles.module.css'\n\ninterface AcceptButtonProps {\n  acceptButtonLabel: string\n  handleAcceptButtonClick: () => void\n}\n\nconst AcceptButton: React.FC<AcceptButtonProps> = ({\n  acceptButtonLabel,\n  handleAcceptButtonClick,\n}) => {\n  return (\n    <button\n      className={styles['react-cookienotice-accept-button']}\n      onClick={handleAcceptButtonClick}\n    >\n      <span>{acceptButtonLabel}</span>\n    </button>\n  )\n}\n\nexport default AcceptButton\n","/* eslint-disable react/jsx-no-target-blank */\n\nimport React from 'react'\n\nimport styles from '../../styles.module.css'\n\ninterface ReadMoreButtonProps {\n  readMoreButtonLabel: string\n  readMoreButtonLink: string\n  readMoreButtonOpenInNewTab: boolean\n}\n\nconst ReadMoreButton: React.FC<ReadMoreButtonProps> = ({\n  readMoreButtonLabel,\n  readMoreButtonLink,\n  readMoreButtonOpenInNewTab,\n}) => {\n  return (\n    <a\n      className={styles['react-cookienotice-read-more-button']}\n      href={readMoreButtonLink}\n      target={readMoreButtonOpenInNewTab ? '_blank' : '_self'}\n      rel={readMoreButtonOpenInNewTab ? 'noreferrer' : undefined}\n    >\n      {readMoreButtonLabel}\n    </a>\n  )\n}\n\nexport default ReadMoreButton\n","import React from 'react'\n\nimport styles from '../../styles.module.css'\n\nimport AcceptButton from './accept'\nimport ReadMoreButton from './read-more'\n\ninterface ButtonsProps {\n  acceptButtonLabel: string\n  handleAcceptButtonClick: () => void\n  readMoreButtonLabel: string\n  readMoreButtonLink: string\n  readMoreButtonOpenInNewTab: boolean\n}\n\nconst Buttons: React.FC<ButtonsProps> = ({\n  acceptButtonLabel,\n  handleAcceptButtonClick,\n  readMoreButtonLabel,\n  readMoreButtonLink,\n  readMoreButtonOpenInNewTab,\n}) => {\n  return (\n    <div className={styles['react-cookienotice-buttons-wrapper']}>\n      <AcceptButton\n        acceptButtonLabel={acceptButtonLabel}\n        handleAcceptButtonClick={handleAcceptButtonClick}\n      />\n      <ReadMoreButton\n        readMoreButtonLabel={readMoreButtonLabel}\n        readMoreButtonLink={readMoreButtonLink}\n        readMoreButtonOpenInNewTab={readMoreButtonOpenInNewTab}\n      />\n    </div>\n  )\n}\n\nexport default Buttons\n","const isDevelopment = process.env.NODE_ENV === 'development'\n\nexport const warn = (message: string): void => {\n  if (isDevelopment) {\n    console.warn(`[react-cookienotice] ${message}`)\n  }\n}\n\nexport const err = (message: string): void => {\n  if (isDevelopment) {\n    console.error(`[react-cookienotice] ${message}`)\n  }\n}\n","import en from './en.json'\nimport fr from './fr.json'\n\nexport default {\n  en: en,\n  fr: fr,\n}\n","import messages from './messages'\n\nconst DEFAULT_LANGUAGE = 'en'\n\nexport const formatMessage = (id: string, override?: string): string => {\n  if (override !== undefined) {\n    return override\n  }\n\n  const navigatorLanguage = navigator.language.split('-')[0]\n  const availableLanguages = Object.keys(messages)\n  const usedLanguage = availableLanguages.includes(navigatorLanguage)\n    ? navigatorLanguage\n    : DEFAULT_LANGUAGE\n\n  if (messages[usedLanguage][id] === undefined) {\n    console.error(`[intl] no message found for id \"${id}\"`)\n    return id\n  }\n\n  return messages[usedLanguage][id]\n}\n","import { err } from '../helpers/debug'\n\nexport const validateAcceptButtonLabel = (\n  parameter?: any,\n): string | undefined => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return undefined\n}\n\nexport const validateReadMoreButtonLabel = (\n  parameter?: any,\n): string | undefined => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return undefined\n}\n\nexport const validateReadMoreButtonLink = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    if (\n      parameter.lastIndexOf('http://', 0) === 0 ||\n      parameter.lastIndexOf('https://', 0) === 0\n    ) {\n      return parameter\n    }\n\n    err(\n      `readMoreButtonLink parameter should starts with \"http://\" or \"https://\"`,\n    )\n  }\n\n  return 'http://aboutcookies.org/'\n}\n\nexport const validateReadMoreButtonOpenInNewTab = (\n  parameter?: any,\n): boolean => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return true\n}\n\nexport const validateCookieTextLabel = (\n  parameter?: any,\n): string | undefined => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return undefined\n}\n\nexport const validateCookieExpiration = (parameter?: any): number => {\n  if (typeof parameter === 'number') {\n    if (parameter > 0) {\n      return parameter\n    }\n\n    err(`cookieExpiration parameter should be more than 0 day`)\n  }\n\n  return 30\n}\n\nexport const validateCookieName = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    if (/\\s/.test(parameter)) {\n      err(`cookieName parameter should not contain whitespace`)\n    }\n\n    if (parameter === '') {\n      err(`cookieName parameter should have at least one character`)\n    }\n\n    return parameter\n  }\n\n  return 'allow-cookies'\n}\n","import React, { useEffect } from 'react'\n\nimport styles from '../styles.module.css'\n\nimport Icon from './icon'\nimport Text from './text'\nimport Buttons from './buttons'\n\nimport { setCookie, getCookie } from '../helpers/cookies'\nimport { warn } from '../helpers/debug'\nimport { formatMessage } from '../intl/format'\nimport {\n  validateAcceptButtonLabel,\n  validateReadMoreButtonLabel,\n  validateReadMoreButtonLink,\n  validateReadMoreButtonOpenInNewTab,\n  validateCookieTextLabel,\n  validateCookieExpiration,\n  validateCookieName,\n} from '../validator'\n\ninterface CookieNoticeProps {\n  acceptButtonLabel?: string\n  readMoreButtonLabel?: string\n  readMoreButtonLink?: string\n  readMoreButtonOpenInNewTab?: boolean\n  cookieTextLabel?: string\n  cookieExpiration?: number\n  cookieName?: string\n  onAcceptButtonClick?: () => void\n}\n\nconst CookieNotice: React.FC<CookieNoticeProps> = ({\n  acceptButtonLabel,\n  readMoreButtonLabel,\n  readMoreButtonLink,\n  readMoreButtonOpenInNewTab,\n  cookieTextLabel,\n  cookieExpiration,\n  cookieName,\n  onAcceptButtonClick,\n}) => {\n  const validCookieExpiration = validateCookieExpiration(cookieExpiration)\n  const validCookieName = validateCookieName(cookieName)\n  const userCookiesAllowed = getCookie(validCookieName) === 'true'\n\n  const [cookiesAllowed, setCookiesAllowed] = React.useState(userCookiesAllowed)\n\n  useEffect(() => {\n    warn(\n      'BREAKING CHANGE: With version >= 4.0.0 you also need to import the css file (read: https://github.com/xavierbriole/react-cookienotice#usage)',\n    )\n  }, [])\n\n  const handleAcceptButtonClick = () => {\n    setCookiesAllowed(true)\n    setCookie(validCookieName, 'true', validCookieExpiration)\n    onAcceptButtonClick && onAcceptButtonClick()\n  }\n\n  if (cookiesAllowed) {\n    return null\n  }\n\n  return (\n    <div className={styles['react-cookienotice-root']}>\n      <div className={styles['react-cookienotice-stick-to-bottom']}>\n        <div className={styles['react-cookienotice-wrapper']}>\n          <Icon />\n          <Text\n            cookieTextLabel={formatMessage(\n              'text.cookieTextLabel',\n              validateCookieTextLabel(cookieTextLabel),\n            )}\n          />\n          <Buttons\n            acceptButtonLabel={formatMessage(\n              'buttons.accept.acceptButtonLabel',\n              validateAcceptButtonLabel(acceptButtonLabel),\n            )}\n            handleAcceptButtonClick={handleAcceptButtonClick}\n            readMoreButtonLabel={formatMessage(\n              'buttons.readMore.readMoreButtonLabel',\n              validateReadMoreButtonLabel(readMoreButtonLabel),\n            )}\n            readMoreButtonLink={validateReadMoreButtonLink(readMoreButtonLink)}\n            readMoreButtonOpenInNewTab={validateReadMoreButtonOpenInNewTab(\n              readMoreButtonOpenInNewTab,\n            )}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CookieNotice\n","export const setCookie = (name: string, value: string, days: number): void => {\n  const expires = new Date()\n  expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000)\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()}`\n}\n\nexport const getCookie = (name: string): string | null => {\n  const value = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`)\n  return value ? decodeURIComponent(value[2]) : null\n}\n","import { lazy } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport CookieNotice from 'react-cookienotice'\r\nimport 'react-cookienotice/dist/index.css'\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <ScrollToTop />\r\n      <CookieNotice />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        button={IntroContent.button}\r\n        icon=\"MeditatingDoodle.svg\"\r\n        id=\"intro\"\r\n      />\r\n      <MiddleBlock\r\n        title={MiddleBlockContent.title}\r\n        content={MiddleBlockContent.text}\r\n        button={MiddleBlockContent.button}\r\n        id=\"vision\"\r\n      />\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title={AboutContent.title}\r\n        content={AboutContent.text}\r\n        section={AboutContent.section}\r\n        icon=\"DoogieDoodle.svg\"\r\n        id=\"expo\"\r\n        button={AboutContent.button}\r\n      />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title={MissionContent.title}\r\n        content={MissionContent.text}\r\n        icon=\"PlantDoodle.svg\"\r\n        id=\"mission\"\r\n        textinput={MissionContent.textinput}\r\n        qr={MissionContent.qr}\r\n        button={MissionContent.button}\r\n      />\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title={ProductContent.title}\r\n        content={ProductContent.text}\r\n        icon=\"LovingDoodle.svg\"\r\n        id=\"product\"\r\n      />\r\n      <Contact\r\n        title={ContactContent.title}\r\n        content={ContactContent.text}\r\n        id=\"contact\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}