{"version":3,"sources":["../../src/components/text.tsx","../../src/helpers/classnames.ts","../../src/components/link.tsx","../../src/components/button.tsx","../../src/helpers/cookies.ts","../../src/intl/messages/index.ts","../../src/intl/format.ts","../../src/helpers/debug.ts","../../src/validator/index.ts","../../src/components/cookie-notice.tsx","pages/Home/index.tsx"],"names":["Text","className","children","React","classes","args","arg","Array","Link","to","newTab","label","href","target","rel","undefined","clsx","styles","Button","onClick","setCookie","name","expires","days","document","en","fr","formatMessage","id","override","navigatorLanguage","navigator","usedLanguage","Object","availableLanguages","messages","console","err","message","process","validateLabel","parameter","validateBoolean","acceptButtonLabel","onAcceptButtonClick","declineButtonLabel","onDeclineButtonClick","titleLabel","descriptionLabel","readMoreLabel","readMoreLink","readMoreInNewTab","hideDeclineButton","cookieExpiration","cookieName","cookieTextLabel","readMoreButtonLabel","readMoreButtonLink","readMoreButtonOpenInNewTab","validAcceptButtonLabel","validDeclineButtonLabel","validTitleLabel","validDescriptionLabel","validReadMoreLabel","validReadMoreLink","validateLink","validReadMoreInNewTab","validHideDeclineButton","validCookieExpiration","validateCookieExpiration","validCookieName","test","shouldHideNotice","value","decodeURIComponent","getCookie","useState","hideNotice","setHideNotice","handleAcceptButtonClick","useCallback","handleDeclineButtonClick","Contact","lazy","MiddleBlock","Container","ScrollToTop","ContentBlock","Home","cookies","setCookies","type","title","IntroContent","content","text","button","icon","MiddleBlockContent","AboutContent","section","MissionContent","textinput","qr","ProductContent","ContactContent"],"mappings":"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","file":"static/js/0.299b020b.chunk.js","sourcesContent":["import React from 'react'\n\ninterface TextProps {\n  className?: string\n  children: React.ReactNode\n}\n\nconst Text = ({ className, children }: TextProps) => (\n  <div className={className}>\n    <span>{children}</span>\n  </div>\n)\n\nexport default Text\n","export default (...args: Array<any>): string => {\n  const classes = []\n\n  for (const arg of args) {\n    if (arg) {\n      if (typeof arg === 'string') {\n        classes.push(arg)\n      } else if (Array.isArray(arg)) {\n        classes.push(...arg)\n      } else {\n        for (const key in arg) {\n          if (arg[key]) {\n            classes.push(key)\n          }\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n","import React from 'react'\n\nimport styles from '../styles.module.css'\n\nimport clsx from '../helpers/classnames'\n\ninterface LinkProps {\n  to?: string\n  newTab?: boolean\n  label?: string\n}\n\nconst Link = ({ to, newTab, label }: LinkProps) => {\n  if (to === undefined || newTab === undefined || label === undefined)\n    return null\n\n  return (\n    <a\n      href={to}\n      target={newTab ? '_blank' : '_self'}\n      rel={newTab ? 'noreferrer' : undefined}\n      className={clsx('react-cookienotice-link', styles.link)}\n    >\n      {label}\n    </a>\n  )\n}\n\nexport default Link\n","import React from 'react'\n\nimport styles from '../styles.module.css'\n\nimport clsx from '../helpers/classnames'\n\ninterface ButtonProps {\n  onClick?: () => void\n  children: React.ReactNode\n}\n\nconst Button = ({ onClick, children }: ButtonProps) => (\n  <button\n    className={clsx('react-cookienotice-button', styles.button)}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n)\n\nexport default Button\n","export const setCookie = (name: string, value: string, days: number): void => {\n  const expires = new Date()\n  expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000)\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()}`\n}\n\nexport const getCookie = (name: string): string | null => {\n  const value = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`)\n  return value ? decodeURIComponent(value[2]) : null\n}\n","import en from './en.json'\nimport fr from './fr.json'\n\nexport default {\n  en,\n  fr,\n}\n","import messages from './messages'\n\nconst DEFAULT_LANGUAGE = 'en'\n\nexport const formatMessage = (id: string, override?: string): string => {\n  if (override !== undefined) {\n    return override\n  }\n\n  const navigatorLanguage = navigator.language.split('-')[0]\n  const availableLanguages = Object.keys(messages)\n  const usedLanguage = availableLanguages.includes(navigatorLanguage)\n    ? navigatorLanguage\n    : DEFAULT_LANGUAGE\n\n  if (messages[usedLanguage][id] === undefined) {\n    console.error(`[intl] no message found for id \"${id}\"`)\n    return id\n  }\n\n  return messages[usedLanguage][id]\n}\n","export const warn = (message: string): void => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(`[react-cookienotice] ${message}`)\n  }\n}\n\nexport const err = (message: string): void => {\n  if (process.env.NODE_ENV === 'development') {\n    console.error(`[react-cookienotice] ${message}`)\n  }\n}\n","import { err } from '../helpers/debug'\n\nexport const validateLabel = (parameter?: any): string | undefined => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return undefined\n}\n\nexport const validateLink = (parameter?: any): string | undefined => {\n  if (typeof parameter === 'string') {\n    if (\n      parameter.lastIndexOf('http://', 0) === 0 ||\n      parameter.lastIndexOf('https://', 0) === 0\n    ) {\n      return parameter\n    }\n\n    err(`a link should start with \"http://\" or \"https://\"`)\n  }\n\n  return undefined\n}\n\nexport const validateBoolean = (parameter?: any): boolean | undefined => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return undefined\n}\n\nexport const validateCookieExpiration = (parameter?: any): number => {\n  if (typeof parameter === 'number') {\n    if (parameter > 0) {\n      return parameter\n    }\n\n    err(`cookieExpiration parameter should be more than 0 day`)\n  }\n\n  return 30\n}\n\nexport const validateCookieName = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    if (/\\s/.test(parameter)) {\n      err(`cookieName parameter should not contain whitespace`)\n    }\n\n    if (parameter === '') {\n      err(`cookieName parameter should have at least one character`)\n    }\n\n    return parameter\n  }\n\n  return 'hide-notice'\n}\n","import React, { useState, useCallback } from 'react'\n\nimport styles from '../styles.module.css'\n\nimport Text from './text'\nimport Link from './link'\nimport Button from './button'\n\nimport { setCookie, getCookie } from '../helpers/cookies'\nimport clsx from '../helpers/classnames'\nimport { formatMessage } from '../intl/format'\nimport {\n  validateLabel,\n  validateLink,\n  validateBoolean,\n  validateCookieExpiration,\n  validateCookieName,\n} from '../validator'\n\nexport interface CookieNoticeProps {\n  /**\n   * The label for the accept button.\n   */\n  acceptButtonLabel?: string\n  /**\n   * A callback function to be called when the accept button is clicked.\n   */\n  onAcceptButtonClick?: () => void\n  /**\n   * The label for the decline button.\n   */\n  declineButtonLabel?: string\n  /**\n   * A callback function to be called when the decline button is clicked.\n   */\n  onDeclineButtonClick?: () => void\n  /**\n   * The title for the cookie banner.\n   */\n  titleLabel?: string\n  /**\n   * The description for the cookie banner.\n   */\n  descriptionLabel?: string\n  /**\n   * The label for the read more link.\n   */\n  readMoreLabel?: string\n  /**\n   * The link for the read more label.\n   */\n  readMoreLink?: string\n  /**\n   * Whether the read more link should open in a new tab.\n   */\n  readMoreInNewTab?: boolean\n  /**\n   * This will hide the decline button.\n   */\n  hideDeclineButton?: boolean\n  /**\n   * Days after cookie expires and user should reaccept cookies.\n   */\n  cookieExpiration?: number\n  /**\n   * The name of the cookie that saves the user consent.\n   */\n  cookieName?: string\n  /**\n   * @deprecated Use titleLabel instead.\n   */\n  cookieTextLabel?: string\n  /**\n   * @deprecated Use readMoreLabel instead.\n   */\n  readMoreButtonLabel?: string\n  /**\n   * @deprecated Use readMoreLink instead.\n   */\n  readMoreButtonLink?: string\n  /**\n   * @deprecated Use readMoreInNewTab instead.\n   */\n  readMoreButtonOpenInNewTab?: boolean\n}\n\n/**\n * The cookie banner.\n *\n * @example\n * <CookieNotice\n *   acceptButtonLabel='acceptButtonLabel'\n *   onAcceptButtonClick={() => {}}\n *   declineButtonLabel='declineButtonLabel'\n *   onDeclineButtonClick={() => {}}\n *   titleLabel='titleLabel'\n *   descriptionLabel='descriptionLabel'\n *   readMoreLabel='readMoreLabel'\n *   readMoreLink='readMoreLink'\n *   readMoreInNewTab={true}\n *   hideDeclineButton={false}\n *   cookieExpiration={30}\n *   cookieName='cookieName'\n * />\n */\nconst CookieNotice = ({\n  acceptButtonLabel,\n  onAcceptButtonClick,\n  declineButtonLabel,\n  onDeclineButtonClick,\n  titleLabel,\n  descriptionLabel,\n  readMoreLabel,\n  readMoreLink,\n  readMoreInNewTab,\n  hideDeclineButton,\n  cookieExpiration,\n  cookieName,\n  cookieTextLabel,\n  readMoreButtonLabel,\n  readMoreButtonLink,\n  readMoreButtonOpenInNewTab,\n}: CookieNoticeProps) => {\n  const validAcceptButtonLabel = validateLabel(acceptButtonLabel)\n  const validDeclineButtonLabel = validateLabel(declineButtonLabel)\n  const validTitleLabel = validateLabel(titleLabel || cookieTextLabel)\n  const validDescriptionLabel = validateLabel(descriptionLabel)\n  const validReadMoreLabel = validateLabel(readMoreLabel || readMoreButtonLabel)\n  const validReadMoreLink = validateLink(readMoreLink || readMoreButtonLink)\n  const validReadMoreInNewTab = validateBoolean(\n    readMoreInNewTab ?? readMoreButtonOpenInNewTab,\n  )\n  const validHideDeclineButton = validateBoolean(hideDeclineButton)\n  const validCookieExpiration = validateCookieExpiration(cookieExpiration)\n  const validCookieName = validateCookieName(cookieName)\n\n  const shouldHideNotice = getCookie(validCookieName) === 'true'\n\n  const [hideNotice, setHideNotice] = useState(shouldHideNotice)\n\n  const handleAcceptButtonClick = useCallback(() => {\n    setHideNotice(true)\n    setCookie(validCookieName, 'true', validCookieExpiration)\n    onAcceptButtonClick && onAcceptButtonClick()\n  }, [])\n\n  const handleDeclineButtonClick = useCallback(() => {\n    setHideNotice(true)\n    setCookie(validCookieName, 'true', validCookieExpiration)\n    onDeclineButtonClick && onDeclineButtonClick()\n  }, [])\n\n  if (hideNotice) return null\n\n  return (\n    <div className={clsx(['react-cookienotice-root', styles.root])}>\n      <div className={clsx('react-cookienotice-body', styles.body)}>\n        <Text className={clsx('react-cookienotice-title', styles.title)}>\n          {formatMessage('text.title', validTitleLabel)}\n        </Text>\n        <Text\n          className={clsx('react-cookienotice-description', styles.description)}\n        >\n          {formatMessage('text.description', validDescriptionLabel)}\n        </Text>\n        <Link\n          to={validReadMoreLink}\n          newTab={validReadMoreInNewTab}\n          label={validReadMoreLabel}\n        />\n      </div>\n      <div className={clsx('react-cookienotice-buttons', styles.buttons)}>\n        <Button onClick={handleAcceptButtonClick}>\n          {formatMessage('button.accept', validAcceptButtonLabel)}\n        </Button>\n        {!validHideDeclineButton && (\n          <Button onClick={handleDeclineButtonClick}>\n            {formatMessage('button.decline', validDeclineButtonLabel)}\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default CookieNotice\n","import { lazy , useState } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport CookieNotice from 'react-cookienotice'\r\nimport 'react-cookienotice/dist/index.css'\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\n\r\nconst Home = () => {\r\n  const [cookies,setCookies] = useState(true)\r\n  return (\r\n    <Container>\r\n      <ScrollToTop />\r\n      { \r\n      !!cookies && <CookieNotice \r\n      onAcceptButtonClick={() => {setCookies(false)}}\r\n      onDeclineButtonClick={() => {setCookies(false)}}\r\n      hideDeclineButton={false}\r\n      cookieExpiration={30}\r\n      cookieName='consent'\r\n      />\r\n      }\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        button={IntroContent.button}\r\n        icon=\"MeditatingDoodle.svg\"\r\n        id=\"intro\"\r\n      />\r\n      <MiddleBlock\r\n        title={MiddleBlockContent.title}\r\n        content={MiddleBlockContent.text}\r\n        button={MiddleBlockContent.button}\r\n        id=\"vision\"\r\n      />\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title={AboutContent.title}\r\n        content={AboutContent.text}\r\n        section={AboutContent.section}\r\n        icon=\"DoogieDoodle.svg\"\r\n        id=\"expo\"\r\n        button={AboutContent.button}\r\n      />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title={MissionContent.title}\r\n        content={MissionContent.text}\r\n        icon=\"PlantDoodle.svg\"\r\n        id=\"mission\"\r\n        textinput={MissionContent.textinput}\r\n        qr={MissionContent.qr}\r\n        button={MissionContent.button}\r\n      />\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title={ProductContent.title}\r\n        content={ProductContent.text}\r\n        icon=\"LovingDoodle.svg\"\r\n        id=\"product\"\r\n      />\r\n      <Contact\r\n        title={ContactContent.title}\r\n        content={ContactContent.text}\r\n        id=\"contact\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}